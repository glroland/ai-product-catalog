pipeline 
{
   agent any
   
   options 
   {
      disableConcurrentBuilds()
      buildDiscarder(logRotator(numToKeepStr: '3'))
      timestamps()
   }

   tools 
   {
      jdk 'java-21'
      maven 'Maven-3.9.6'
   }

   stages
   {
      stage('Prepare') 
      {
         steps 
         {
            sh '''
                    echo "PATH = ${PATH}"
                    echo "M2_HOME = ${M2_HOME}"
                '''

            git branch: 'main', 
                    url: 'https://github.com/glroland/ai-product-catalog.git'
         }
      }

      stage('Create Docker Image for storefront-svc') 
      {
         steps 
         {
            sh 'cd storefront-svc ; docker build . --tag storefront:$BUILD_NUMBER'
            sh 'cd storefront-svc ; docker save storefront:$BUILD_NUMBER > storefront-dockerimage.tar'
            step(followSymlinks: false, artifacts: 'storefront-svc/storefront-dockerimage.tar', $class: 'ArtifactArchiver')
            sh 'cd storefront-svc ; docker rmi storefront:$BUILD_NUMBER'
         }
      }

      stage('Create Docker Image for customer-chatbot') 
      {
         steps 
         {
            sh 'cd customer-chatbot ; docker build . --tag chatbot:$BUILD_NUMBER'
            sh 'cd customer-chatbot ; docker save chatbot:$BUILD_NUMBER > chatbot-dockerimage.tar'
            step(followSymlinks: false, artifacts: 'customer-chatbot/chatbot-dockerimage.tar', $class: 'ArtifactArchiver')
            sh 'cd customer-chatbot ; docker rmi chatbot:$BUILD_NUMBER'
         }
      }

      stage('Build ai-product-catalog-svc') 
      {
         steps 
         {
            sh 'cd ai-product-catalog-svc ; mvn --batch-mode clean package'
            step(followSymlinks: false, artifacts: 'ai-product-catalog-svc/target/ai-product-catalog-svc-1.0.jar', $class: 'ArtifactArchiver')
         }
      }

      stage('Create Docker Image for ai-product-catalog-svc') 
      {
         steps 
         {
            sh 'cd ai-product-catalog-svc ; docker build . --tag svc:$BUILD_NUMBER'
            sh 'cd ai-product-catalog-svc ; docker save svc:$BUILD_NUMBER > svc-dockerimage.tar'
            step(followSymlinks: false, artifacts: 'ai-product-catalog-svc/svc-dockerimage.tar', $class: 'ArtifactArchiver')
            sh 'cd ai-product-catalog-svc ; docker rmi svc:$BUILD_NUMBER'
         }
      }

      stage('Scan for OWASP Issues in Dependencies') 
      {
         steps 
         {
            dependencyCheck additionalArguments: ''' 
                       -o "./" 
                       -s "./"
                       -f "ALL" 
                       --prettyPrint''', odcInstallation: 'OWASP Dependency-Check'
   
            dependencyCheckPublisher pattern: 'dependency-check-report.xml'
            step(followSymlinks: false, artifacts: '**/dependency-check-report.*', $class: 'ArtifactArchiver')
         }
      }

      stage('Reload then push images to quay') 
      {
         steps 
         {
            script 
            {
               docker.withRegistry('https://registry.home.glroland.com/', 'quay') 
               {
                  sh 'docker load -i storefront-svc/storefront-dockerimage.tar'
                  sh 'docker tag storefront:$BUILD_NUMBER registry.home.glroland.com/ai-product-catalog/storefront:$BUILD_NUMBER'
                  sh 'docker rmi storefront:$BUILD_NUMBER'
                  sh 'docker push registry.home.glroland.com/ai-product-catalog/storefront:$BUILD_NUMBER'
                  sh 'docker rmi registry.home.glroland.com/ai-product-catalog/storefront:$BUILD_NUMBER'
               
                  sh 'docker load -i customer-chatbot/chatbot-dockerimage.tar'
                  sh 'docker tag chatbot:$BUILD_NUMBER registry.home.glroland.com/ai-product-catalog/chatbot:$BUILD_NUMBER'
                  sh 'docker rmi chatbot:$BUILD_NUMBER'
                  sh 'docker push registry.home.glroland.com/ai-product-catalog/chatbot:$BUILD_NUMBER'
                  sh 'docker rmi registry.home.glroland.com/ai-product-catalog/chatbot:$BUILD_NUMBER'
               
                  sh 'docker load -i ai-product-catalog-svc/svc-dockerimage.tar'
                  sh 'docker tag svc:$BUILD_NUMBER registry.home.glroland.com/ai-product-catalog-svc/svc:$BUILD_NUMBER'
                  sh 'docker rmi svc:$BUILD_NUMBER'
                  sh 'docker push registry.home.glroland.com/ai-product-catalog/svc:$BUILD_NUMBER'
                  sh 'docker rmi registry.home.glroland.com/ai-product-catalog/svc:$BUILD_NUMBER'
               }
            }
         }
      }
   }
}
