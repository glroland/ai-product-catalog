kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ include "ai-product-catalog.fullname" . }}
  labels:
    app.kubernetes.io/part-of: "{{ .Release.Name }}-ai-product-catalog"
    {{- include "ai-product-catalog.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ include "ai-product-catalog.fullname" . }}"
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: "{{ include "ai-product-catalog.fullname" . }}"
        deployment: {{ include "ai-product-catalog.fullname" . }}
        app.kubernetes.io/part-of: "{{ .Release.Name }}-ai-product-catalog"
        {{- include "ai-product-catalog.labels" . | nindent 8 }}
        {{- include "ai-product-catalog.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: postgresql
          image: "{{ .Values.image.name }}"
          ports:
            - containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRESQL_USER
              value: ai-product-catalog
            - name: POSTGRESQL_PASSWORD
              value: ai_product_catalog123
            - name: POSTGRESQL_DATABASE
              value: ai_product_catalog
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
